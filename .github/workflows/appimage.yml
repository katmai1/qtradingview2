name: Build and Create AppImage

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
    - name: Checkout the repository
      uses: actions/checkout@v2

    - name: Install Qt 6.2.1
      uses: jurplel/install-qt-action@v3
      with:
        version: '6.2.*'
        modules: qtwebengine qtwebchannel qtpositioning
        tools: 'tools_ifw tools_qtcreator,qt.tools.qtcreator'
        
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential libgl1-mesa-dev libxkbcommon-x11-0 libxi-dev libxcursor-dev libxcomposite-dev libxdamage-dev libxrandr-dev libxtst-dev libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev libasound2-dev libdbus-1-dev

    - name: Compile the application
      run: qmake && make

    - name: Install AppImage tools
      run: sudo apt-get install -y desktop-file-utils file

    - name: Download and set up linuxdeployqt
      run: |
        curl -L -o linuxdeployqt "https://github.com/probonopd/linuxdeployqt/releases/download/continuous/linuxdeployqt-continuous-x86_64.AppImage"
        chmod +x linuxdeployqt

    - name: Create AppImage
      run: |
        mkdir -p appdir/usr/bin
        cp QTradingview2 appdir/usr/bin/  # Ajusta esta línea según la ubicación del archivo de salida después de compilar
        cp qtradingview2.desktop appdir/
        cp icons/qtradingview2.png appdir/
        ./linuxdeployqt appdir/usr/bin/QTradingview2 -appimage -no-plugins -verbose=1

    - name: Move the AppImage to an artifacts directory
      run: |
        mkdir artifacts
        mv QTradingview2*.AppImage artifacts/
    
    - name: Upload binaries to release
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: artifacts/QTradingview2*.AppImage
        asset_name: QTradingview2
        tag: ${{ github.ref }}
        overwrite: true
        body: "This is my release text"
